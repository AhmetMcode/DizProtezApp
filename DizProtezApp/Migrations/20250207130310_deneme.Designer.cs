// <auto-generated />
using System;
using DizProtezApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DizProtezApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250207130310_deneme")]
    partial class deneme
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DizProtezApp.Models.PlcData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Displacement")
                        .HasColumnType("int");

                    b.Property<double>("ForceAxialN")
                        .HasColumnType("float");

                    b.Property<double>("ForceFemoralN")
                        .HasColumnType("float");

                    b.Property<int>("SpecimenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SpecimenId");

                    b.ToTable("PlcData");
                });

            modelBuilder.Entity("DizProtezApp.Models.Specimen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SpecimenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TestRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TestedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TestRecordId");

                    b.ToTable("Specimens");
                });

            modelBuilder.Entity("DizProtezApp.Models.TestRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Parameters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestRecords");
                });

            modelBuilder.Entity("DizProtezApp.Models.PlcData", b =>
                {
                    b.HasOne("DizProtezApp.Models.Specimen", "Specimen")
                        .WithMany("PlcData")
                        .HasForeignKey("SpecimenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specimen");
                });

            modelBuilder.Entity("DizProtezApp.Models.Specimen", b =>
                {
                    b.HasOne("DizProtezApp.Models.TestRecord", "TestRecord")
                        .WithMany("Specimens")
                        .HasForeignKey("TestRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestRecord");
                });

            modelBuilder.Entity("DizProtezApp.Models.Specimen", b =>
                {
                    b.Navigation("PlcData");
                });

            modelBuilder.Entity("DizProtezApp.Models.TestRecord", b =>
                {
                    b.Navigation("Specimens");
                });
#pragma warning restore 612, 618
        }
    }
}
